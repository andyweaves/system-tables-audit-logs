{
  "queries_and_alerts": [
    {
      "name": "repeated_failed_login_attempts",
      "description": "Repeated failed login attempts could indicate an attacker trying to brute force access to your lakehouse. The following query can be used to detect repeated failed login attempts over a 30 minute period within the last 24 hours.",
      "query": "SELECT WINDOW(event_time, '30 minutes').start AS window_start, WINDOW(event_time, '30 minutes').end AS window_end, action_name, user_identity.email, request_params.user, response.status_code, count(*) AS total FROM system.access.audit WHERE action_name IN ('aadBrowserLogin', 'aadTokenLogin', 'certLogin', 'jwtLogin', 'login', 'oidcBrowserLogin', 'samlLogin', 'tokenLogin') AND response.status_code IN (401, 403) AND WINDOW(event_time, '30 minutes').end >= current_timestamp() - INTERVAL 24 HOURS GROUP BY 1, 2, 3, 4, 5, 6 ORDER BY window_end DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "repeated_failed_login_attempts",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following failed login attempts within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "1"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "changes_to_admin_users",
      "description": "Databricks account and workspace admins should be limited to a few very trusted individuals responsible for managing the deployment. The granting of new admin privileges should be reviewed. The following query can be used to detect changes to admin users within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, user_identity.email, lower(replace(audit_level, '_LEVEL', '')) AS account_or_workspace, action_name, request_params.targetUserName, request_params.targetGroupName, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND (action_name IN ('setAccountAdmin', 'changeAccountOwner', 'setAdmin', 'removeAdmin') OR (action_name IN ('addPrincipalToGroup', 'removePrincipalFromGroup') AND request_params.targetGroupName = 'admins')) GROUP BY 1, 2, 3, 4, 5, 6, 7 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "changes_to_admin_users",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following changes to admin users within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "changes_to_workspace_configuration",
      "description": "Many workspace-level configurations perform a security-enforcing function. The following SQL query can be used to detect changes in workspace configuration within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, user_identity.email, request_params.workspaceConfKeys, request_params.workspaceConfValues, count(*) AS total FROM system.access.audit WHERE action_name = 'workspaceConfEdit' AND event_time >= current_timestamp() - INTERVAL 24 HOURS GROUP BY 1, 2, 3, 4, 5 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "changes_to_workspace_configuration",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following changes to workspace configurations within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "download_data_from_control_plane",
      "description": "Databricks allows customers to configure whether they want users to be able to download notebook or SQL query results, but some customers might want to monitor and report rather than prevent entirely. The following query can be used to detect the download of results from notebooks, Databricks SQL, Unity Catalog volumes and MLflow, as well as the exporting of notebooks in formats that may contain query results within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, user_identity.email, service_name, action_name, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND (action_name IN ('downloadPreviewResults', 'downloadLargeResults', 'filesGet', 'getModelVersionDownloadUri', 'getModelVersionSignedDownloadUri') OR (action_name = 'workspaceExport' AND request_params.workspaceExportFormat != 'SOURCE') OR (action_name = 'downloadQueryResult' AND request_params.fileType != 'arrows')) GROUP BY 1, 2, 3, 4, 5 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "download_data_from_control_plane",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following downloads from the control plane within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "ip_access_list_failures",
      "description": "Databricks allows customers to configure IP Access Lists to restrict access to their account & workspaces. However, they may want to monitor and be alerted whenever access is attempted from an untrusted network. The following query can be used to detect all IpAccessDenied and accountIpAclsValidationFailed events within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, user_identity.email, source_ip_address, action_name, response.error_message, response.status_code, request_params.path, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND action_name IN ('IpAccessDenied', 'accountIpAclsValidationFailed') GROUP BY 1, 2, 3, 4, 5, 6, 7, 8 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "ip_access_list_failures",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following attempts to access the control plane from unauthorized networks within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "databricks_access_to_customer_workspaces",
      "description": "This query can be used to detect logins to your workspace via the Databricks support process. This access is tied to a support ticket while also complying with your workspace configuration that may disable such access. The following query can be used to detect Databricks access to your workspaces within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, request_params.user, request_params.approver, request_params.duration, request_params.reason, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND action_name = 'databricksAccess' GROUP BY 1, 2, 3, 4, 5, 6 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "databricks_access_to_customer_workspaces",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following logins to your workspaces from Databricks employees within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "global_init_script_changes",
      "description": "Global init scripts run arbitrary code that is executed on every cluster. This can be a very powerful capability but with great power comes great responsibility. The following SQL query can be used to detect the creation, update and deletion of global init scripts within the last 24 hours",
      "query": "SELECT event_time, workspace_id, user_identity.email, source_ip_address, action_name, request_params.name, request_params.script_id, request_params.enabled, request_params.`script-SHA256`, response.status_code, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND service_name = 'globalInitScripts' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "global_init_script_changes",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following changes to global init scripts within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "install_library_on_all_clusters",
      "description": "Installing libraries on all clusters is an anti-pattern. Customers should use cluster-scoped or notebook-scoped libraries for many different reasons including but not limited to transparency, recreatability, reliability and security. The following SQL query can be used to detect any attempts to install libraries on all clusters within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, user_identity.email, request_params.library, response.status_code, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND service_name = 'clusterLibraries' AND action_name = 'installLibraryOnAllClusters' GROUP BY 1, 2, 3, 4, 5 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "install_library_on_all_clusters",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following attempts to install libraries on all clusters detected within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "mount_point_creation",
      "description": "Mount points are considered an anti-pattern because mount points do not have the same strong data governance features as external locations or volumes in Unity Catalog. The following query can be used to detect new mount points created within the last 24 hours",
      "query": "SELECT event_time, workspace_id, user_identity.email, request_params.mountPoint, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND action_name = 'mount' GROUP BY 1, 2, 3, 4 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "mount_point_creation",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following mount points created within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "delta_sharing_recipients_without_ip_acls",
      "description": "If you’re sharing personal data, delta sharing recipients should always be secured with IP access lists. The following SQL query can be used to detect the creation or update of delta sharing recipients which do not have IP access lists defined.",
      "query": "SELECT event_time, user_identity.email, CASE WHEN request_params.name IS NOT NULL THEN request_params.name WHEN request_params.name_arg IS NOT NULL THEN request_params.name_arg ELSE NULL END AS delta_share, request_params.ip_access_list, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND action_name IN ('createRecipient') AND request_params.ip_access_list IS NULL GROUP BY 1, 2, 3, 4 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "delta_sharing_recipients_without_ip_acls",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following Delta Sharing recipients created without IP ACLs within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "long_lifetime_token_generation",
      "description": "Personal access tokens should be treated like a credential and protected at all times. As well as being managed by the Token Management API and secured with additional protections like IP Access Lists, they should only be generated with a short lifetime. The following SQL query can be used to detect the generation of PAT tokens with a lifetime of greater than 72 hours.",
      "query": "SELECT event_time, workspace_id, user_identity.email, timestamp_millis(cast(request_params.tokenExpirationTime AS BIGINT)) AS token_expiration, timestampdiff(HOUR, event_time, timestamp_millis(cast(request_params.tokenExpirationTime AS BIGINT))) AS token_duration_in_hours, request_params.tokenHash, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND action_name = 'generateDbToken' AND timestampdiff(HOUR, event_time, timestamp_millis(cast(request_params.tokenExpirationTime AS BIGINT))) > 72 GROUP BY 1, 2, 3, 4, 5, 6 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "long_lifetime_token_generation",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following tokens generated with a lifetime of >72 hours within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "potential_privilege_escalation",
      "description": "A high number of permission changes could indicate privelege escalation. The following SQL query can be used to detect users who have made a high number (>50) changes to permissions within the last 24 hours. This query filters out changes made by Databricks System-Users, although you could optionally add them back in.",
      "query": "SELECT * FROM (SELECT event_date, user_identity.email, if(isnotnull(request_params.workspace_id), request_params.workspace_id, workspace_id) AS workspace_id, collect_set(service_name) AS service_names, size(collect_set(service_name)) AS number_of_services, collect_set(action_name) AS action_names, size(collect_set(action_name)) AS number_of_actions, count(*) AS number_of_changes FROM system.access.audit WHERE action_name IN ('addPrincipalToGroup', 'changeDatabricksSqlAcl', 'changeDatabricksWorkspaceAcl', 'changeDbTokenAcl', 'changePasswordAcl', 'changeServicePrincipalAcls', 'generateDbToken','setAdmin', 'changeClusterAcl', 'changeClusterPolicyAcl', 'changeWarehouseAcls', 'changePermissions', 'transferObjectOwnership', 'changePipelineAcls', 'changeFeatureTableAcl', 'addPrincipalToGroup', 'changeIamRoleAcl', 'changeInstancePoolAcl', 'changeJobAcl', 'resetJobAcl', 'changeRegisteredModelAcl', 'changeInferenceEndpointAcl', 'putAcl', 'changeSecurableOwner', 'grantPermission', 'changeWorkspaceAcl', 'updateRoleAssignment', 'setAccountAdmin', 'changeAccountOwner', 'updatePermissions', 'updateSharePermissions') AND event_time >= current_timestamp() - INTERVAL 24 HOURS AND user_identity.email NOT IN ('System-User') GROUP BY 1, 2, 3) WHERE number_of_changes > 50 ORDER BY number_of_changes DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "potential_privilege_escalation",
        "options": {
          "column": "number_of_changes",
          "custom_body": "<h3>There have been the following high numbers of permissions changes detected within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">=",
          "value": "50"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "destructive_activities",
      "description": "A high number of destructive activities (such as delete* events) may indicate a malicious attempt to cause disruption and harm. The following SQL query can be used to detect users who have attempted a high number (>50) destructive activities within the last 24 hours. This query filters out activities from Databricks System-Users, although you could optionally add them back in.",
      "query": "SELECT * FROM (SELECT event_date, user_identity.email, if(isnotnull(request_params.workspace_id), request_params.workspace_id, workspace_id) AS workspace_id, collect_set(service_name) AS service_names, size(collect_set(service_name)) AS number_of_services, collect_set(action_name) AS action_names, size(collect_set(action_name)) AS number_of_actions, count(*) AS total_items_deleted FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND user_identity.email NOT IN ('System-User') AND (startswith(action_name, 'delete') OR contains(lower(action_name), 'delete') OR contains(lower(action_name), 'trash')) GROUP BY 1, 2, 3) WHERE total_items_deleted > 50 ORDER BY total_items_deleted DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "destructive_activities",
        "options": {
          "column": "total_items_deleted",
          "custom_body": "<h3>There have been the following high numbers of destructive activities detected within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">=",
          "value": "50"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "repeated_access_to_secrets",
      "description": "Repeated attempts to access secrets could indicate an attempt to steal credentials. The following SQL query can be used to detect users who have attempted a high number (>15) of attempts to access secrets within the last 24 hours. This query filters out requests from Databricks System-Users, although you could optionally add them back in.",
      "query": "SELECT * FROM (SELECT event_date, user_identity.email, workspace_id, collect_set(request_params.scope) AS secret_scopes, size(collect_set(request_params.scope)) AS number_of_scopes_accessed, collect_set(request_params.key) AS secret_keys, size(collect_set(request_params.key)) AS number_of_secrets_accessed, count(*) AS total_requests FROM system.access.audit WHERE action_name = 'getSecret' AND event_time >= current_timestamp() - INTERVAL 24 HOURS AND user_identity.email NOT IN ('System-User') GROUP BY 1, 2, 3) WHERE number_of_secrets_accessed >= 15 ORDER BY number_of_secrets_accessed DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "repeated_access_to_secrets",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the repeated attempts to access secrets within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">=",
          "value": "15"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "access_to_multiple_workspaces",
      "description": "The same user accessing multiple workspaces within a short time frame could indicate lateral movement, or malicious attempts to increase the blast radius of an attack. The following SQL query can be used to detect users who have accessed a high number (>5) of different workspaces within the last 24 hours. This query filters out requests from unknown and Databricks System-Users, although you could optionally add them back in.",
      "query": "SELECT * FROM (SELECT event_date, user_identity.email, count(distinct workspace_id) AS number_of_workspaces_accessed, collect_set(workspace_id) AS workspace_ids FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND user_identity.email NOT IN ('System-User', 'unknown') GROUP BY 1, 2) WHERE number_of_workspaces_accessed >= 5 ORDER BY number_of_workspaces_accessed DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "",
        "options": {
          "column": "number_of_workspaces_accessed",
          "custom_body": "<h3>There have been the following attempts to access multiple workspaces within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">=",
          "value": "5"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "use_of_print_statements",
      "description": "Databricks supports verbose audit logging, which can be useful in highly regulated environments in which all commands run interactively by a user must be recorded. Verbose audit logs can also be useful for monitoring compliance with coding standards. For example, let's suppose your organization has a policy that print() statements should not be used, the following SQL query could be used to monitor compliance with such a policy by detecting uses of the print() statement within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, user_identity.email, service_name, request_params.commandLanguage, request_params.commandText, request_params.status, request_params.notebookId, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND action_name = 'runCommand' AND request_params.commandText rlike 'print[/s]?(?! e)(.)+' GROUP BY 1, 2, 3, 4, 5, 6, 7, 8 ORDER BY event_time DESC",
      "parent": "system_tables/audit/admin/queries/",
      "alert": {
        "name": "use_of_print_statements",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following use of print statements within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/admin/alerts/"
      }
    },
    {
      "name": "clam_av_infected_files_detected",
      "description": "Customers using one of our compliance security profile offerings have additional monitoring agents including antivirus installed on their data plane hosts. The following query can be used to detect all antivirus scan events during which infected files have been detected within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, request_params.instanceId, regexp_extract(response.result, ('Infected files: (\\d+)')) AS infected_files FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND service_name = 'clamAVScanService-dataplane' AND startswith(response.result, 'Infected files:') AND regexp_extract(response.result, ('Infected files: (\\d+)')) > 0 ORDER BY event_time DESC",
      "parent": "system_tables/audit/compliance_security_profile/queries/",
      "alert": {
        "name": "clam_av_infected_files_detected",
        "options": {
          "column": "infected_files",
          "custom_body": "<h3>There have been the following infected files detected by ClamAV within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/compliance_security_profile/alerts/"
      }
    },
    {
      "name": "capsule8_container_breakout_events",
      "description": "User code runs in low-privileged containers. A container escape could compromise the security of the cluster especially when running with user isolation for Unity Catalog or Table ACLs. Capsule8 provides a few alerts related to container isolation issues that should be investigated if triggered. The following query can be used to detect all container breakout events within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, request_params.instanceId, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND service_name = 'capsule8-alerts-dataplane' AND action_name in ('Container Escape via Kernel Exploitation', 'Userland Container Escape', 'New File Executed in Container', 'Privileged Container Launched') GROUP BY 1, 2, 3 ORDER BY event_time DESC",
      "parent": "system_tables/audit/compliance_security_profile/queries/",
      "alert": {
        "name": "capsule8_container_breakout_events",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following container breakout events detected by Capsule8 within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/compliance_security_profile/alerts/"
      }
    },
    {
      "name": "capsule8_changes_to_host_security_settings",
      "description": "No untrusted code or end-user commands should be running on the host OS. There should be no process making changes to security configurations of the host VM. The following SQL query can be used to help us identify suspicious changes within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, request_params.instanceId, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND service_name = 'capsule8-alerts-dataplane' AND action_name in ('Processor-Level Protections Disabled', 'AppArmor Disabled In Kernel', 'AppArmor Profile Modified', 'Boot Files Modified', 'Root Certificate Store Modified') GROUP BY 1, 2, 3 ORDER BY event_time DESC",
      "parent": "system_tables/audit/compliance_security_profile/queries/",
      "alert": {
        "name": "capsule8_changes_to_host_security_settings",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following changes to host security settings detected by Capsule8 within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/compliance_security_profile/alerts/"
      }
    },
    {
      "name": "capsule8_kernel_related_events",
      "description": "Kernel related events could be another indicator of malicious code running on the host. In particular there should be no kernel modules loaded or internal kernel functions being called by user code. The following SQL query can be used to detect any kernel related events within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, request_params.instanceId, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND service_name = 'capsule8-alerts-dataplane' AND action_name in ('BPF Program Executed', 'Kernel Module Loaded', 'Kernel Exploit') GROUP BY 1, 2, 3 ORDER BY event_time DESC",
      "parent": "system_tables/audit/compliance_security_profile/queries/",
      "alert": {
        "name": "capsule8_kernel_related_events",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following kernel related events detected by Capsule8 within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/compliance_security_profile/alerts/"
      }
    },
    {
      "name": "capsule8_suspicious_host_activity",
      "description": "Given the architecture of the Databricks containerized runtime and host OS model, only trusted code should be making changes or executing on the host EC2. Changes to containers, evasive actions, or interactive shells could be due to suspicious activity on the host and should be reviewed. The following SQL query can be used to detect suspicious host activity within the last 24 hours.",
      "query": "SELECT event_time, workspace_id, request_params.instanceId, count(*) AS total FROM system.access.audit WHERE event_time >= current_timestamp() - INTERVAL 24 HOURS AND service_name = 'capsule8-alerts-dataplane' AND action_name in ('New File Executed in Container', 'Suspicious Interactive Shell', 'User Command Logging Evasion', 'Privileged Container Launched') GROUP BY 1, 2, 3 ORDER BY event_time DESC",
      "parent": "system_tables/audit/compliance_security_profile/queries/",
      "alert": {
        "name": "capsule8_suspicious_host_activity",
        "options": {
          "column": "total",
          "custom_body": "<h3>There have been the following suspicious host activity events detected by Capsule8 within the last 24 hours:</h3><br>{{QUERY_RESULT_TABLE}}<br><a href='{{QUERY_URL}}'>Link to query</a><br><a href='{{ALERT_URL}}'>Link to alert</a>",
          "custom_subject": "Alert {{ALERT_NAME}} changed status to {{ALERT_STATUS}} because the number of unexpected events is {{ALERT_CONDITION}} than {{ALERT_THRESHOLD}}",
          "muted": false,
          "op": ">",
          "value": "0"
        },
        "rearm": "3600",
        "parent": "system_tables/audit/compliance_security_profile/alerts/"
      }
    }
  ]
}